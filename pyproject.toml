[build-system]
requires = ["hatchling", "hatch-vcs", "nipreps-versions"]
build-backend = "hatchling.build"

[project]
name = "templateflow"
description = "TemplateFlow Python Client - TemplateFlow is the Zone of neuroimaging templates."
readme = "README.rst"
authors = [{name = "The NiPreps Developers", email = "nipreps@gmail.com"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = {file = "LICENSE"}
requires-python = ">=3.8"
dependencies = [
    "pybids >= 0.15.2",
    "importlib_resources >= 5.7; python_version < '3.11'",
    "requests",
    "tqdm",
]
dynamic = ["version"]

[project.urls]
Archive = "https://github.com/templateflow/templateflow"
"Bug Tracker" = "https://github.com/templateflow/python-client/issues"
Home = "https://www.templateflow.org"
Documentation = "https://www.templateflow.org/python-client/"
"Source Code" = "https://github.com/templateflow/python-client"

[project.optional-dependencies]
test = [
    "coverage ~= 5.0.0",
    "pytest",
    "pytest-cov",
    "pytest-env",
    "pytest-xdist",
    "toml",
]
datalad = [
    "datalad ~= 1.0.0"
]
doc = [
    "nbsphinx",
    "packaging",
    "pydot>=1.2.3",
    "pydotplus",
    "sphinx-click",
    "sphinx ~= 4.0",
    "sphinx_rtd_theme >= 0.4.3",
    "sphinxcontrib-apidoc",
    "sphinx_multiversion",
]
# Aliases
tests = ["templateflow[test]"]
docs = ["templateflow[doc]"]
all = ["templateflow[datalad,doc,test]"]

[project.scripts]
templateflow = "templateflow.cli:main"

#
# Hatch configurations
#

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]  # No longer needed in sdist

[tool.hatch.build.targets.wheel]
packages = ["templateflow"]
# exclude = [
#     "templateflow/tests/data",  # Large test data directory
# ]

##  The following two sections configure setuptools_scm in the hatch way

[tool.hatch.version]
validate-bump = true
source = "vcs"
raw-options = { version_scheme = "nipreps-calver" }

[tool.hatch.build.hooks.vcs]
version-file = "templateflow/_version.py"

#
# Developer tool configurations
#

[tool.black]
line-length = 99
skip-string-normalization = true

[tool.isort]
profile = 'black'

[tool.flake8]
max-line-length = "99"
doctests = "False"
exclude = "*build/"
ignore = ["W503", "E203"]
per-file-ignores = [
    "**/__init__.py : F401",
    "docs/conf.py : E265",
]

[tool.pytest.ini_options]
norecursedirs = [".git"]
addopts = "-svx --doctest-modules"
doctest_optionflags = "ALLOW_UNICODE NORMALIZE_WHITESPACE ELLIPSIS"
env = "PYTHONHASHSEED=0"
filterwarnings = ["ignore::DeprecationWarning"]
junit_family = "xunit2"

[tool.coverage.run]
branch = true
concurrency = ['multiprocessing']
omit = [
    '*/tests/*',
    '*/conftest.py',
    'templateflow/_version.py'
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    'raise NotImplementedError',
    'warnings\.warn',
]

[tool.ruff]
line-length = 99

[tool.ruff.lint]
extend-select = [
  "F",
  "E",
  "W",
  "I",
  "UP",
  "YTT",
  "S",
  "BLE",
  "B",
  "A",
  # "CPY",
  "C4",
  "DTZ",
  "T10",
  # "EM",
  "EXE",
  "FA",
  "ISC",
  "ICN",
  "PT",
  "Q",
]
extend-ignore = [
  "S311",  # We are not using random for cryptographic purposes
  "ISC001",
  "S603",
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.extend-per-file-ignores]
"*/test_*.py" = ["S101"]
"fmriprep/utils/debug.py" = ["A002", "T100"]
"docs/conf.py" = ["A001"]
"docs/sphinxext/github_link.py" = ["BLE001"]

[tool.ruff.format]
quote-style = "single"

[tool.codespell]
# Ref: https://github.com/codespell-project/codespell#using-a-config-file
skip = '.git,*.pdf,*.svg,venvs,*.css'
check-hidden = true
# ignore-regex = ''
# ignore-words-list = ''
